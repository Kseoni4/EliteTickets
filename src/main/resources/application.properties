# Vaadin
vaadin.allowed-packages=ru.mirea.docker.elitetickets.view
vaadin.productionMode=true

spring.datasource.driver-class-name=org.postgresql.Driver
server.servlet.context-path=/api
spring.jpa.show-sql=false
spring.mvc.throw-exception-if-no-handler-found=true
server.error.include-message=always
server.error.whitelabel.enabled=false
#logging.level.org.springframework.security=TRACE
logging.level.ru.mirea=TRACE


# jdbc:postgresql://ip:port/database_name
spring.datasource.url=${DATABASE_URL}

# mail
mail.host=localhost
mail.port=25
mail.sender=noreply@elitetickets.tms-studio.ru
mail.password=

# jwt
token.secret=6f70656e7373682d6b65792d763100000000046e6f6e65000000046e6f6e65000000000000000100000097000000077373682d727361000000030100010000008100e395c1bff726c5fdb9ed7939b858fd06ea53098756b8f0580970777a682fbe104c24890e07c51a29a2a28bd7be5d9d48f127924a6aa5b69d48acc1d18f54f3fffc840dcc1526d0eb16fc70a3d85f28d0d2a9c8b99585b8227984bd260a27f43c77849ca71d07ea8bb792dd082e2d3f3219cce1e7a0ce877631005086ad2f4a9b00000210a29f5a81a29f5a81000000077373682d7273610000008100e395c1bff726c5fdb9ed7939b858fd06ea53098756b8f0580970777a682fbe104c24890e07c51a29a2a28bd7be5d9d48f127924a6aa5b69d48acc1d18f54f3fffc840dcc1526d0eb16fc70a3d85f28d0d2a9c8b99585b8227984bd260a27f43c77849ca71d07ea8bb792dd082e2d3f3219cce1e7a0ce877631005086ad2f4a9b00000003010001000000800fe95a807761289a92b33db48165075bc26a47d24487ed95da2318d7600d6676713c64b0ac6e6563dfd10981edf75195d5f6744deba2e65f9cc32751e579850d90f353e82a55a240346387022ecf011080075366dea8999a3d291c04436472173875807c10b3d43c909eed0246b8244000835b74532568c0c678834ad561c4f10000004035e42cc4627884c54977799b166ef7ba4349ed9f9effc0b0a260d1f49ddf7db00bef54acea5048a53406c6ad4ff1f1a90e7c84a36bbd376994cc474ae01f65e40000004100f3571765df6d4bd75f4cc44cb9236af81ee6642783ce41a0d23f40ed67cdcf4b65724c857d857cc55fbf722cf6e4f1754352117f2251ee51526c9150f2733f370000004100ef6cd4ae7e4196a1258b0e3dfd88674642778d58683bf94f1a836fa125460f484f609755bd764ee97e67b81d453a0eee4bf4b9daa9133b45516022b2489cd9bd000000156b73656e6f404b73656e6f2d4d42412e6c6f63616c010203040506
token.timeToLive=7200

# jdbc:postgresql
spring.datasource.username=user
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update

# redis
spring.data.redis.database=1
spring.data.redis.password=
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=6379


# Yandex OAuth2
spring.security.oauth2.client.registration.yandex.provider=yandex
spring.security.oauth2.client.registration.yandex.client-id=18e1c68a1e994cffbb8f257f37660901
spring.security.oauth2.client.registration.yandex.client-secret=e5a619f667734247b7d1940e1ba68578
spring.security.oauth2.client.registration.yandex.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.yandex.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.yandex.authorization-uri=https://oauth.yandex.ru/authorize
spring.security.oauth2.client.provider.yandex.token-uri=https://oauth.yandex.ru/token
spring.security.oauth2.client.provider.yandex.user-info-uri=https://login.yandex.ru/info?&format=json
spring.security.oauth2.client.provider.yandex.user-info-authentication-method=header
spring.security.oauth2.client.provider.yandex.user-name-attribute=login

# Yookassa
payments.secret-key=test_9epGjPLOG4J8h-pMBY3SAZkltbFufMHJx2K7MSuEcBI
payments.shop-id=263934
payments.return-url=http://192.168.120.162:8080/api/successful_payment